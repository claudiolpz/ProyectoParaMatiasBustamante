# Dockerfile ultra-optimizado para planes gratuitos
FROM node:20-alpine AS builder

WORKDIR /app

# Instalar solo lo necesario
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY prisma/ ./prisma/

# Optimizar instalación para memoria baja
RUN npm ci --only=production --no-audit --no-fund && \
    npx prisma generate && \
    npm cache clean --force

# Copy source and build
COPY src/ ./src/
RUN npm run build

# Production ultra-light
FROM node:20-alpine AS production

WORKDIR /app

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S backend -u 1001

# Copiar solo lo necesario
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/prisma ./prisma
COPY public/ ./public/

# Optimización extrema de memoria
ENV NODE_OPTIONS="--max-old-space-size=400"
ENV NODE_ENV=production

RUN chown -R backend:nodejs /app
USER backend

EXPOSE 4000

# Health check ligero
HEALTHCHECK --interval=60s --timeout=5s --start-period=10s --retries=2 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:4000/health || exit 1

CMD ["node", "dist/index.js"]
