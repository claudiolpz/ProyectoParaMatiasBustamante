// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id                   Int       @id @default(autoincrement())
  email                String    @unique
  password             String
  name                 String
  lastname             String
  role                 UserRole  @default(user)
  emailVerified        Boolean   @default(false)
  emailToken           String?
  emailTokenExpires    DateTime?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  sales                Sale[]
}

enum UserRole {
  admin
  user
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Int
  stock      Int
  image      String?
  categoryId Int
  sku        String?  @unique
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sales    Sale[]
  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]
}

model Sale {
  id         Int      @id @default(autoincrement())
  userId     Int
  productId  Int
  quantity   Int
  unitPrice  Int // Precio al momento de la venta
  totalPrice Int // quantity * unitPrice
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("sales")
}

// npx prisma migrate dev -n nombreMigracion
// npx prisma migrate reset
// npx prisma generate
// npx prisma studio (Para ver pagina de la db)
