{
  "name": "inventario_matias",
  "version": "1.0.0",
  "description": "Sistema de Inventario Para Matias Bustamante (Express, TypeScript y React)",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon src/index.ts",
    "dev:api": "nodemon src/index.ts --api",
    "build": "npx prisma generate && tsc",
    "start": "node dist/index.js",
    "docker:build": "npx prisma generate && npm run build",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "docker:dev:build": "docker-compose -f docker-compose.dev.yml up --build",
    "docker:dev:rebuild": "docker-compose -f docker-compose.dev.yml down && docker-compose -f docker-compose.dev.yml build --no-cache && docker-compose -f docker-compose.dev.yml up",
    "docker:prod": "docker-compose up",
    "docker:prod:build": "docker-compose up --build",
    "docker:prod:rebuild": "npm run prisma:docker-setup && docker-compose down && docker-compose build --no-cache && docker-compose up -d && timeout /t 5 /nobreak > nul && npm run prisma:local-setup && npx prisma migrate deploy && npm run prisma:docker-setup",
    "docker:full-rebuild": "npm run prisma:docker-setup && docker-compose down && docker-compose build --no-cache && cd ../database && docker-compose down && docker-compose up -d && cd ../backend && timeout /t 5 /nobreak > nul && npm run prisma:local-setup && npx prisma migrate deploy && npm run prisma:docker-setup && docker-compose up -d",
    "cloud:deploy": "npx prisma generate && npx prisma migrate deploy && npm run build && npm start",
    "cloud:migrate": "npx prisma migrate deploy",
    "docker:cloud": "docker-compose -f docker-compose.cloud.yml up -d",
    "docker:cloud:build": "docker-compose -f docker-compose.cloud.yml up --build -d",
    "docker:production": "docker-compose -f ../docker-compose.production.yml up -d",
    "docker:production:build": "docker-compose -f ../docker-compose.production.yml up --build -d",
    "docker:production:rebuild": "docker-compose -f ../docker-compose.production.yml down && docker-compose -f ../docker-compose.production.yml build --no-cache && docker-compose -f ../docker-compose.production.yml up -d",
    "docker:production:logs": "docker-compose -f ../docker-compose.production.yml logs -f",
    "docker:production:stop": "docker-compose -f ../docker-compose.production.yml down",
    "docker:free": "docker-compose -f ../docker-compose.free.yml up -d",
    "docker:free:build": "docker-compose -f ../docker-compose.free.yml up --build -d",
    "docker:free:rebuild": "docker-compose -f ../docker-compose.free.yml down && docker-compose -f ../docker-compose.free.yml build --no-cache && docker-compose -f ../docker-compose.free.yml up -d",
    "docker:free:logs": "docker-compose -f ../docker-compose.free.yml logs -f",
    "docker:free:stop": "docker-compose -f ../docker-compose.free.yml down",
    "docker:down": "docker-compose down",
    "docker:clean": "docker-compose down --volumes --remove-orphans",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:deploy": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "prisma:local-setup": "node -e \"const fs = require('fs'); const env = fs.readFileSync('.env', 'utf8'); const newEnv = env.replace('@postgres:5432', '@localhost:5432'); fs.writeFileSync('.env', newEnv);\"",
    "prisma:docker-setup": "node -e \"const fs = require('fs'); const env = fs.readFileSync('.env', 'utf8'); const newEnv = env.replace('@localhost:5432', '@postgres:5432'); fs.writeFileSync('.env', newEnv);\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/claudiolpz/ProyectoParaMatiasBustamante.git"
  },
  "author": "Claudio Lopez",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/claudiolpz/ProyectoParaMatiasBustamante/issues"
  },
  "homepage": "https://github.com/claudiolpz/ProyectoParaMatiasBustamante#readme",
  "dependencies": {
    "@prisma/client": "^6.12.0",
    "@types/nodemailer": "^7.0.0",
    "bcrypt": "^6.0.0",
    "colors": "^1.4.0",
    "cors": "^2.8.5",
    "dotenv": "^17.2.0",
    "express": "^5.1.0",
    "express-validator": "^7.2.1",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.5",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@types/bcrypt": "^6.0.0",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/multer": "^2.0.0",
    "@types/uuid": "^10.0.0",
    "nodemon": "^3.1.10",
    "prisma": "^6.12.0",
    "ts-node": "^10.9.2",
    "@types/node": "^20.0.0",
    "typescript": "^5.8.3"
  }
}
